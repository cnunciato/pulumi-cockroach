// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cockroach

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Cluster Data Source
func GetCockroachCluster(ctx *pulumi.Context, args *GetCockroachClusterArgs, opts ...pulumi.InvokeOption) (*GetCockroachClusterResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetCockroachClusterResult
	err := ctx.Invoke("cockroach:index/getCockroachCluster:getCockroachCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCockroachCluster.
type GetCockroachClusterArgs struct {
	// The ID of this resource.
	Id string `pulumi:"id"`
}

// A collection of values returned by getCockroachCluster.
type GetCockroachClusterResult struct {
	AccountId        string                       `pulumi:"accountId"`
	CloudProvider    string                       `pulumi:"cloudProvider"`
	CockroachVersion string                       `pulumi:"cockroachVersion"`
	CreatorId        string                       `pulumi:"creatorId"`
	Dedicated        GetCockroachClusterDedicated `pulumi:"dedicated"`
	// The ID of this resource.
	Id string `pulumi:"id"`
	// Name of cluster
	Name            string                        `pulumi:"name"`
	OperationStatus string                        `pulumi:"operationStatus"`
	Plan            string                        `pulumi:"plan"`
	Regions         []GetCockroachClusterRegion   `pulumi:"regions"`
	Serverless      GetCockroachClusterServerless `pulumi:"serverless"`
	State           string                        `pulumi:"state"`
	UpgradeStatus   string                        `pulumi:"upgradeStatus"`
}

func GetCockroachClusterOutput(ctx *pulumi.Context, args GetCockroachClusterOutputArgs, opts ...pulumi.InvokeOption) GetCockroachClusterResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCockroachClusterResult, error) {
			args := v.(GetCockroachClusterArgs)
			r, err := GetCockroachCluster(ctx, &args, opts...)
			var s GetCockroachClusterResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCockroachClusterResultOutput)
}

// A collection of arguments for invoking getCockroachCluster.
type GetCockroachClusterOutputArgs struct {
	// The ID of this resource.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetCockroachClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCockroachClusterArgs)(nil)).Elem()
}

// A collection of values returned by getCockroachCluster.
type GetCockroachClusterResultOutput struct{ *pulumi.OutputState }

func (GetCockroachClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCockroachClusterResult)(nil)).Elem()
}

func (o GetCockroachClusterResultOutput) ToGetCockroachClusterResultOutput() GetCockroachClusterResultOutput {
	return o
}

func (o GetCockroachClusterResultOutput) ToGetCockroachClusterResultOutputWithContext(ctx context.Context) GetCockroachClusterResultOutput {
	return o
}

func (o GetCockroachClusterResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCockroachClusterResult) string { return v.AccountId }).(pulumi.StringOutput)
}

func (o GetCockroachClusterResultOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetCockroachClusterResult) string { return v.CloudProvider }).(pulumi.StringOutput)
}

func (o GetCockroachClusterResultOutput) CockroachVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetCockroachClusterResult) string { return v.CockroachVersion }).(pulumi.StringOutput)
}

func (o GetCockroachClusterResultOutput) CreatorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCockroachClusterResult) string { return v.CreatorId }).(pulumi.StringOutput)
}

func (o GetCockroachClusterResultOutput) Dedicated() GetCockroachClusterDedicatedOutput {
	return o.ApplyT(func(v GetCockroachClusterResult) GetCockroachClusterDedicated { return v.Dedicated }).(GetCockroachClusterDedicatedOutput)
}

// The ID of this resource.
func (o GetCockroachClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCockroachClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of cluster
func (o GetCockroachClusterResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetCockroachClusterResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetCockroachClusterResultOutput) OperationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetCockroachClusterResult) string { return v.OperationStatus }).(pulumi.StringOutput)
}

func (o GetCockroachClusterResultOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v GetCockroachClusterResult) string { return v.Plan }).(pulumi.StringOutput)
}

func (o GetCockroachClusterResultOutput) Regions() GetCockroachClusterRegionArrayOutput {
	return o.ApplyT(func(v GetCockroachClusterResult) []GetCockroachClusterRegion { return v.Regions }).(GetCockroachClusterRegionArrayOutput)
}

func (o GetCockroachClusterResultOutput) Serverless() GetCockroachClusterServerlessOutput {
	return o.ApplyT(func(v GetCockroachClusterResult) GetCockroachClusterServerless { return v.Serverless }).(GetCockroachClusterServerlessOutput)
}

func (o GetCockroachClusterResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetCockroachClusterResult) string { return v.State }).(pulumi.StringOutput)
}

func (o GetCockroachClusterResultOutput) UpgradeStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetCockroachClusterResult) string { return v.UpgradeStatus }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCockroachClusterResultOutput{})
}
